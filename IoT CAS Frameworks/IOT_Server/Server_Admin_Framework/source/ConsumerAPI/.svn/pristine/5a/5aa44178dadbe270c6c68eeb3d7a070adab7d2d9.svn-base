/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package AV_Action;

import Model.TaskShow;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import org.apache.log4j.Logger;
/**
 *
 * @author gopal
 */
public class AV_SAGetTaskAttributes {
static Logger log = Logger.getLogger(AV_TasktypeattributesAction.class);
    public static void setTaskAttributes(TaskShow TaskRecord, String taskid, Connection con) {
        List attributesvalues = new ArrayList();
        List attributesnames = new ArrayList();
        HashMap<String,String> attrValues=new HashMap<String,String>();
        Statement stat = null;
        ResultSet rs = null;
        try{
           stat = con.createStatement();
           log.info("select * from gatask where task_id='" + taskid + "'");
          rs = stat.executeQuery("select * from gatask where task_id='" + taskid + "'");
                    while (rs.next()) {
                    for (int i = 7; i <= 37; i++) {
                            attributesvalues.add(rs.getString(i));
                        }

                    }
                    rs=null;

                    log.info("select attribute from gatasktypeattributes where tasktype in(select task_type from gatask where task_id='" + taskid + "') order by attributepos ");
                    rs = stat.executeQuery("select attribute from gatasktypeattributes where tasktype in(select task_type from gatask where task_id='" + taskid + "') order by attributepos ");
                    while (rs.next()) {

                        String attribute = rs.getString("attribute");

                        attributesnames.add(attribute);
                    }
                    if ((attributesnames != null && attributesnames.size() > 0) && (attributesvalues != null && attributesvalues.size() > 0)) {

                        int s = attributesnames.size();
                        for (int i = 0; i < s; i++) {
                            String attributelegnth = (String) attributesvalues.get(i);
                            if (!(attributesvalues.get(i).equals("null")) && !(attributesvalues.get(i).equals("None")) && !(attributelegnth.trim().equals(""))) {
                                
                                if(attributesnames.get(i).toString().contains("/"))
                                {
                                    String attrName=attributesnames.get(i).toString().replace("/", "-");
                                    attrValues.put(attrName,(String)attributesvalues.get(i));
                                    attrName=null;
                                }else{
                                attrValues.put((String)attributesnames.get(i),(String)attributesvalues.get(i));
                                }

                            }
                        }

                    }

                    TaskRecord.setAttributeValues(attrValues);
                    log.info("task attributes set successfully");

       }catch(Exception exp){

           log.error("Exception while getting attributes::");


       }finally{
           attributesvalues=null;
           attributesnames=null;
           attrValues=null;
           if(stat!=null){
                try {
                    stat.close();
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(AV_SAGetTaskAttributes.class.getName()).log(Level.SEVERE, null, ex);
                }

           }
       }
    }

}
