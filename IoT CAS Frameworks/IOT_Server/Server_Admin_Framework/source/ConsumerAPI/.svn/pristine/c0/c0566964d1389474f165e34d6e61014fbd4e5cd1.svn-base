/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package controller;

import Mail.*;

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *
 * @author gopal
 */
public class MailContent extends HttpServlet
{

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException
    {
        response.setContentType("text/xml;charset=UTF-8");
        StringBuffer results = new StringBuffer("<mailsend>");
        String opStatus = "";
        String opDescription = "";
        boolean isMailSend = false;
        String messageBody = "";

        String emailid = request.getParameter("emailid");
        String content = request.getParameter("url");
        System.out.println("Email::" + emailid + " and URL::" + content);
        boolean checkparam = false;
        if ((emailid != null && !emailid.equalsIgnoreCase("")) && (content != null && !content.equalsIgnoreCase("")))
        {
            checkparam = true;
        }
        if (checkparam)
        {
            try
            {
                messageBody = SendMail.setMailBody(content);
                System.out.println("Message body::" + messageBody);

                if (messageBody != null && !messageBody.equalsIgnoreCase(""))
                {
                    isMailSend = MailModule.mailSend(emailid, messageBody, request);
                    System.out.println("Message sending status"+isMailSend);
                    if (isMailSend)
                    {
                        //log.info(" Sending Mail Failed");
                        System.out.println("mail has been sent");
                        opStatus = "0";
                        opDescription = "operation success";
                    } else
                    {
                        System.out.println("mail sending failed");
                        opStatus = "106";
                        opDescription = "Unable to process the request action";
                    }
                } else
                {
                    System.out.println("mail sending failed");
                    opStatus = "106";
                    opDescription = "Unable to process the request action";
                }

            } catch (Exception e)
            {
                e.printStackTrace();
            }

        } else
        {
            opStatus = "108";
            opDescription = "Invalid inputs";
        }

        try
        {
            results.append("<status>\n");
            results.append("<code>\n");
            results.append(opStatus);
            results.append("</code>\n");
            results.append("<Description>\n");
            results.append(opDescription);
            results.append("</Description>\n");
            results.append("</status>\n");
            results.append("</mailsend>");
            response.getWriter().write(results.toString());

        } catch (Exception e)
        {
            e.printStackTrace();
            LogWriter.writeDebug("exception while writing output");
        } finally
        {
            try
            {
                results = null;

            } catch (Exception e)
            {
                e.printStackTrace();
            }
        }

    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /** 
     * Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException
    {
        processRequest(request, response);
    }

    /** 
     * Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException
    {
        processRequest(request, response);
    }

    /** 
     * Returns a short description of the servlet.
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo()
    {
        return "Short description";
    }// </editor-fold>
}
