/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Model;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author raghu
 */
public class GroupsAndRolesAndAssignees {

   

    public ArrayList getgroups(String Tasktype, Connection con) {
        ArrayList Groups = null;
       Statement stat = null;
        ResultSet rs = null;
        try {
            System.out.println("Fetching Groups Informations");

            stat = con.createStatement();
            System.out.println("select distinct(groupname) from gatasktypegroup where tasktype='" + Tasktype + "'");
            rs = stat.executeQuery("select distinct(groupname) from gatasktypegroup where tasktype='" + Tasktype + "'");
            Groups = new ArrayList();

            while (rs.next()) {



                String GroupName = rs.getString("groupname");
                Groups.add(GroupName);

            }



        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                stat.close();
            } catch (SQLException ex) {
                Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        return Groups;
    }

    public ArrayList getRoles(String groupname, Connection con) {
        ArrayList roles = null;
         Statement stat = null;
        ResultSet rs = null;
        try {
            System.out.println("Fetching role informations");
            stat = con.createStatement();

            System.out.println("select role from gagrouproles where groupname='" + groupname + "'");
            rs = stat.executeQuery("select role from gagrouproles where groupname='" + groupname + "'");
            roles = new ArrayList();
            while (rs.next()) {

                String roleName = rs.getString("role");
                roles.add(roleName);

            }


        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                stat.close();
            } catch (SQLException ex) {
                Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        return roles;
    }

    public ArrayList getAssignees(String szAssignType, String szRoleName, String szGroup,Connection con) {
        ArrayList assignees = null;
         Statement stat = null;
      ResultSet rs = null;
        try {

                      stat = con.createStatement();
                       assignees = new ArrayList();
            if (szAssignType.equals("role") && szRoleName != null && !szRoleName.equals("select")) {
                System.out.println("Getting assignee names by role");


                System.out.println("select distinct(userid) from gaagentgroup where groupname='" + szGroup + "' and role='" + szRoleName + "'");
                
                rs = stat.executeQuery("select distinct(userid) from gaagentgroup where groupname='" + szGroup + "' and role='" + szRoleName + "'");

               
               
            }else if (szAssignType.equals("user")) {
                System.out.println("Getting assignee names by user");
                System.out.println("select distinct(userid) from gaagentgroup where groupname='" + szGroup + "'");
                rs = stat.executeQuery("select distinct(userid) from gaagentgroup where groupname='" + szGroup + "'");
            }
                while (rs.next()) {



                    String AssigneeName = rs.getString("userid");
                    assignees.add(AssigneeName);


                }


            

        } catch (Exception ex) {
            ex.printStackTrace();

        } finally {
            try {
                stat.close();
            } catch (SQLException ex) {
                Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(GroupsAndRolesAndAssignees.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return assignees;
    }
}
